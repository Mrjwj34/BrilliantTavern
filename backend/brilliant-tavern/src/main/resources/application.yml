spring:
  application:
    name: brilliant-tavern
  
  # 数据库配置
  datasource:
    url: jdbc:postgresql://localhost:5432/brilliant_tavern
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          time_zone: Asia/Shanghai
  
  # Jackson配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  
  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      jedis:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0
      timeout: 3000ms

  # Spring AI配置
  ai:
    model:
      chat: vertexai  # 启用Vertex AI Chat模型
    vertex:
      ai:
        gemini:
          project-id: ${VERTEX_AI_PROJECT_ID:blissful-mile-468505-e2}
          location: ${VERTEX_AI_LOCATION:us-central1}
          chat:
            options:
              model: gemini-2.0-flash
              temperature: 0.7
              max-output-tokens: 2048
              candidate-count: 1

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api

# JWT配置
jwt:
  secret: BrilliantTavernJWTSecretKey2024ForProductionPleaseUseAStrongerKey
  expiration: 86400000  # 24小时 (单位：毫秒)
  header: Authorization
  token-prefix: "Bearer "

# 应用配置
app:
  # TTS服务配置
  tts:
    provider: mock  # 开发阶段使用mock实现
    default-voice: voice-001
    
  # Spring AI ChatMemory配置
  ai:
    chat:
      memory:
        repository:
          jdbc:
            initialize-schema: always
  cors:
    allowed-origins: http://localhost:3000,http://localhost:5173
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  # 文件上传配置
  upload:
    max-file-size: 10MB
    max-request-size: 10MB
    
  # WebSocket配置  
  websocket:
    allowed-origins: http://localhost:3000,http://localhost:5173

# SpringDoc OpenAPI 配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    default-models-expand-depth: 1
    default-model-expand-depth: 1
  show-actuator: false

# 日志配置
logging:
  level:
    '[com.github.jwj.brilliantavern]': DEBUG
    '[com.github.jwj.brilliantavern.security.JwtAuthenticationEntryPoint]': INFO  # 减少未授权访问的日志输出
    '[org.springframework.security]': DEBUG
    '[org.hibernate.SQL]': DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
