spring:
  application:
    name: brilliant-tavern
  
  # 数据库配置
  datasource:
    url: jdbc:postgresql://localhost:5432/brilliant_tavern
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          time_zone: Asia/Shanghai
  
  # Jackson配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
  
  # 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api

# JWT配置
jwt:
  secret: BrilliantTavernJWTSecretKey2024ForProductionPleaseUseAStrongerKey
  expiration: 86400000  # 24小时 (单位：毫秒)
  header: Authorization
  token-prefix: "Bearer "

# 应用配置
app:
  cors:
    allowed-origins: http://localhost:3000,http://localhost:5173
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  # 文件上传配置
  upload:
    max-file-size: 10MB
    max-request-size: 10MB

# SpringDoc OpenAPI 配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    default-models-expand-depth: 1
    default-model-expand-depth: 1
  show-actuator: false

# 日志配置
logging:
  level:
    com.github.jwj.brilliantavern: DEBUG
    '[com.github.jwj.brilliantavern.security.JwtAuthenticationEntryPoint]': INFO  # 减少未授权访问的日志输出
    '[org.springframework.security]': DEBUG
    '[org.hibernate.SQL]': DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
