# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: brilliant-tavern

  # 数据库配置
  datasource:
    url: jdbc:postgresql://localhost:5432/brilliant_tavern
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Jackson配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
      database: 0
      jedis:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0
      timeout: 3000ms

  # Google Gen AI配置
google:
  cloud:
    project-id: ${VERTEX_AI_PROJECT_ID}
    api-key: ${GOOGLE_API_KEY:}  # 可选，用于Gemini Developer API
    vertex-ai:
      location: ${VERTEX_AI_LOCATION:us-central1}
      model: ${VERTEX_AI_MODEL:gemini-2.5-flash}
      temperature: 1.1
      max-output-tokens: 2048
      think-budget: 0  # 思考预算，设为0禁用思考模式
      use-vertex-ai: true  # true使用Vertex AI，false使用Gemini Developer API



# JWT配置
jwt:
  secret: BrilliantTavernJWTSecretKey2024ForProduction
  expiration: 86400000  # 24小时 (单位：毫秒)
  header: Authorization
  token-prefix: "Bearer "

# 应用配置
app:
  # TTS服务配置
  tts:
    base-url: ${TTS_SERVICE_URL:http://localhost:9880}  # TTS服务基础URL
    timeout: 30s
    # 音频配置
    audio:
      format: mp3
      chunk-length: 200
      normalize: true
      streaming: false
      max-new-tokens: 1024
      top-p: 0.8
      repetition-penalty: 1.1
      temperature: 0.8
      sample-rate: 44100
      channels: 1
      bits-per-sample: 16
  
  # 文件上传配置
  upload:
    max-file-size: 10MB

  # WebSocket配置
  websocket:
    allowed-origins: http://localhost:3000,http://localhost:5173

# SpringDoc OpenAPI 配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    default-models-expand-depth: 1
    default-model-expand-depth: 1
  show-actuator: false

# 日志配置
logging:
  level:
    '[com.github.jwj.brilliantavern]': DEBUG
    '[com.github.jwj.brilliantavern.security.JwtAuthenticationEntryPoint]': INFO  # 减少未授权访问的日志输出
    '[org.springframework.security]': DEBUG
    '[org.hibernate.SQL]': DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
